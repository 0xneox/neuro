{"version":3,"file":"static/js/678.29912cc2.chunk.js","mappings":"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","sources":["components/Navbar.js","hooks/useApi.js","pages/Invite.js","../node_modules/framer-motion/dist/es/components/AnimatePresence/PresenceChild.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/index.mjs","../node_modules/framer-motion/dist/es/utils/use-force-update.mjs"],"sourcesContent":["// components/Navbar.js\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport { FaHome, FaSyncAlt, FaChartBar, FaUser, FaUsers, FaCog } from 'react-icons/fa';\r\n\r\nconst NavbarContainer = styled.div`\r\n  position: fixed;\r\n  bottom: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  background: linear-gradient(to right, #071665, #0348B2, #0870DE);\r\n  display: flex;\r\n  justify-content: space-around;\r\n  padding: 10px 0;\r\n  z-index: 1000;\r\n`;\r\n\r\nconst NavbarIcon = styled.div`\r\n  color: ${props => (props.active ? '#ffffff' : 'rgba(255, 255, 255, 0.6)')};\r\n  font-size: 20px;\r\n  cursor: pointer;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  transition: all 0.3s ease;\r\n\r\n  &:hover {\r\n    color: #ffffff;\r\n    transform: translateY(-3px);\r\n  }\r\n`;\r\n\r\nconst NavbarLabel = styled.div`\r\n  font-size: 12px;\r\n  margin-top: 4px;\r\n`;\r\n\r\nconst Navbar = () => {\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n\r\n  const navItems = [\r\n    { path: '/home', icon: FaHome, label: 'Home' },\r\n    { path: '/quest', icon: FaSyncAlt, label: 'Quest' },\r\n    { path: '/leaderboard', icon: FaChartBar, label: 'Leaderboard' },\r\n    { path: '/invite', icon: FaUsers, label: 'Invite' },\r\n    { path: '/profile', icon: FaUser, label: 'Profile' },\r\n    { path: '/settings', icon: FaCog, label: 'Settings' },\r\n  ];\r\n\r\n  return (\r\n    <NavbarContainer>\r\n      {navItems.map(item => (\r\n        <NavbarIcon \r\n          key={item.path}\r\n          active={location.pathname === item.path} \r\n          onClick={() => navigate(item.path)}\r\n        >\r\n          <item.icon />\r\n          <NavbarLabel>{item.label}</NavbarLabel>\r\n        </NavbarIcon>\r\n      ))}\r\n    </NavbarContainer>\r\n  );\r\n};\r\n\r\nexport default Navbar;","import { useState, useCallback } from 'react';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst useApi = (apiFunc) => {\r\n  const [data, setData] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const execute = useCallback(async (...args) => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      const result = await apiFunc(...args);\r\n      setData(result);\r\n      return result;\r\n    } catch (err) {\r\n      setError(err);\r\n      toast.error('An error occurred. Please try again later.');\r\n      console.error('API Error:', err);\r\n      throw err; // Re-throw the error for the component to handle if needed\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [apiFunc]);\r\n\r\n  return { execute, data, loading, error };\r\n};\r\n\r\nexport default useApi;","import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport { motion, AnimatePresence } from 'framer-motion';\r\nimport { generateReferralCode, applyReferralCode, getReferralStats } from '../services/api';\r\nimport useApi from '../hooks/useApi';\r\nimport Navbar from '../components/Navbar';\r\nimport { FaUsers, FaCopy, FaShareAlt } from 'react-icons/fa';\r\nimport { useAuth } from '../context/AuthContext';\r\nimport defaultAvatar from \"../Images/second.png\";\r\nimport logo from '../Images/logoo.png';\r\nimport neuro from '../Images/logo1.png';\r\nimport backgroundImage from \"../Images/bg5.jpg\";\r\n\r\nconst InviteWrapper = styled(motion.div)`\r\n  position: relative;\r\n  min-height: 100vh;\r\n  width: 100vw;\r\n  color: #ffffff;\r\n  background: linear-gradient(180deg, #000033 0%, #000066 100%);\r\n  background-image: url(${backgroundImage});\r\n  background-size: cover;\r\n  background-position: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst Header = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 10px 20px;\r\n  width: 100%;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  box-sizing: border-box;\r\n  position: fixed;\r\n  top: 0;\r\n  z-index: 1000;\r\n`;\r\n\r\nconst Logo = styled.img`\r\n  height: 40px;\r\n  width: auto;\r\n`;\r\n\r\nconst ContentWrapper = styled.div`\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  padding: 80px 20px 70px;\r\n  overflow-y: auto;\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  font-size: 24px;\r\n  margin-bottom: 10px;\r\n  text-align: center;\r\n`;\r\n\r\nconst UserInfo = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  width: 100%;\r\n  margin-bottom: 30px;\r\n`;\r\n\r\nconst UserDetail = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nconst Avatar = styled.img`\r\n  width: 50px;\r\n  height: 50px;\r\n  border-radius: 50%;\r\n  margin-right: 10px;\r\n`;\r\n\r\nconst UserName = styled.span`\r\n  font-size: 18px;\r\n  font-weight: bold;\r\n`;\r\n\r\nconst CPLevel = styled.span`\r\n  font-size: 14px;\r\n  opacity: 0.8;\r\n`;\r\n\r\nconst Referrals = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nconst ReferralIcon = styled(FaUsers)`\r\n  margin-right: 5px;\r\n`;\r\n\r\nconst RewardSection = styled.div`\r\n  width: 100%;\r\n  margin-bottom: 30px;\r\n`;\r\n\r\nconst RewardTitle = styled.h3`\r\n  font-size: 18px;\r\n  margin-bottom: 15px;\r\n  text-align: center;\r\n`;\r\n\r\nconst RewardItem = styled(motion.div)`\r\n  background: rgba(255, 255, 255, 0.1);\r\n  border-radius: 10px;\r\n  padding: 15px;\r\n  margin-bottom: 10px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`;\r\n\r\nconst RewardInfo = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nconst RewardText = styled.span`\r\n  font-size: 16px;\r\n`;\r\n\r\nconst ClaimButton = styled(motion.button)`\r\n  background: #3d85c6;\r\n  color: #ffffff;\r\n  border: none;\r\n  padding: 8px 20px;\r\n  border-radius: 20px;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst UsersCount = styled.div`\r\n  font-size: 24px;\r\n  font-weight: bold;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst InviteLinkSection = styled.div`\r\n  width: 100%;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst InviteLink = styled.div`\r\n  background: rgba(255, 255, 255, 0.1);\r\n  border-radius: 10px;\r\n  padding: 15px;\r\n  margin-bottom: 10px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`;\r\n\r\nconst LinkText = styled.span`\r\n  font-size: 14px;\r\n  opacity: 0.8;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  white-space: nowrap;\r\n`;\r\n\r\nconst ButtonGroup = styled.div`\r\n  display: flex;\r\n  gap: 10px;\r\n`;\r\n\r\nconst ActionButton = styled(motion.button)`\r\n  background: #3d85c6;\r\n  color: #ffffff;\r\n  border: none;\r\n  padding: 8px 20px;\r\n  border-radius: 20px;\r\n  cursor: pointer;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nconst BonusInfo = styled.div`\r\n  font-size: 14px;\r\n  text-align: center;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst ReferralsList = styled.div`\r\n  width: 100%;\r\n`;\r\n\r\nconst ReferralsTitle = styled.h3`\r\n  font-size: 18px;\r\n  margin-bottom: 15px;\r\n`;\r\n\r\nconst NoReferrals = styled.p`\r\n  text-align: center;\r\n  opacity: 0.8;\r\n`;\r\n\r\nconst Invite = () => {\r\n  const { user } = useAuth();\r\n  const [referralCode, setReferralCode] = useState('');\r\n  const [referralStats, setReferralStats] = useState(null);\r\n  const { execute: generateCode } = useApi(generateReferralCode);\r\n  const { execute: applyCode } = useApi(applyReferralCode);\r\n  const { execute: fetchReferralStats } = useApi(getReferralStats);\r\n\r\n  useEffect(() => {\r\n    const initializeReferralCode = async () => {\r\n      if (!user?.referralCode) {\r\n        try {\r\n          const { referralCode } = await generateCode();\r\n          setReferralCode(referralCode);\r\n        } catch (error) {\r\n          console.error('Failed to generate referral code:', error);\r\n        }\r\n      } else {\r\n        setReferralCode(user.referralCode);\r\n      }\r\n    };\r\n    const fetchStats = async () => {\r\n      try {\r\n        const stats = await fetchReferralStats();\r\n        setReferralStats(stats);\r\n      } catch (error) {\r\n        console.error('Failed to fetch referral stats:', error);\r\n      }\r\n    };\r\n\r\n    initializeReferralCode();\r\n    fetchStats();\r\n  }, [user, generateCode, fetchReferralStats]);\r\n\r\n  const handleCopyLink = () => {\r\n    navigator.clipboard.writeText(`https://t.me/OfficialNeroBot?start=${referralCode}`);\r\n    // Implement a toast or notification to show the link was copied\r\n  };\r\n\r\n  const handleShare = () => {\r\n    // Implement share functionality\r\n    // This could open a native share dialog on mobile devices\r\n    if (navigator.share) {\r\n      navigator.share({\r\n        title: 'Join me on Neurolov!',\r\n        text: 'Use my referral code to get started!',\r\n        url: `https://t.me/OfficialNeroBot?start=${referralCode}`\r\n      }).catch(console.error);\r\n    } else {\r\n      // Fallback for desktop or unsupported browsers\r\n      handleCopyLink();\r\n    }\r\n  };\r\n\r\n  const handleClaim = async (rewardId) => {\r\n    // Implement claim functionality\r\n    // This should call an API to claim the reward and update the UI\r\n    console.log(`Claiming reward ${rewardId}`);\r\n  };\r\n\r\n  return (\r\n    <InviteWrapper\r\n      initial={{ opacity: 0 }}\r\n      animate={{ opacity: 1 }}\r\n      exit={{ opacity: 0 }}\r\n    >\r\n      <Header>\r\n        <Logo src={logo} alt=\"New Logo\" />\r\n        <Logo src={neuro} alt=\"Neurolov Logo\" />\r\n      </Header>\r\n\r\n      <ContentWrapper>\r\n        <Title>Refer and Earn</Title>\r\n        <UserInfo>\r\n          <UserDetail>\r\n            <Avatar src={user?.avatar || defaultAvatar} alt=\"User Avatar\" />\r\n            <div>\r\n              <UserName>{user?.username || 'User'}</UserName>\r\n              <CPLevel>CP {user?.cpLevel || 1}</CPLevel>\r\n            </div>\r\n          </UserDetail>\r\n          <Referrals>\r\n            <ReferralIcon /> {referralStats?.totalReferrals || 0} Referrals\r\n          </Referrals>\r\n        </UserInfo>\r\n       \r\n        <RewardSection>\r\n          <RewardTitle>Referral Rewards</RewardTitle>\r\n          <AnimatePresence>\r\n            {[\r\n              { id: 1, friends: 1, reward: 10000 },\r\n              { id: 2, friends: 3, reward: 50000 },\r\n              { id: 3, friends: 5, reward: 150000 },\r\n            ].map((item) => (\r\n              <RewardItem\r\n                key={item.id}\r\n                initial={{ opacity: 0, y: 20 }}\r\n                animate={{ opacity: 1, y: 0 }}\r\n                exit={{ opacity: 0, y: -20 }}\r\n              >\r\n                <RewardInfo>\r\n                  <ReferralIcon />\r\n                  <RewardText>Invite {item.friends} friend{item.friends > 1 ? 's' : ''}</RewardText>\r\n                </RewardInfo>\r\n                <RewardText>{item.reward.toLocaleString()} XP</RewardText>\r\n                <ClaimButton\r\n                  whileHover={{ scale: 1.05 }}\r\n                  whileTap={{ scale: 0.95 }}\r\n                  onClick={() => handleClaim(item.id)}\r\n                  disabled={referralStats?.totalReferrals < item.friends}\r\n                >\r\n                  {referralStats?.totalReferrals >= item.friends ? 'Claim' : 'Locked'}\r\n                </ClaimButton>\r\n              </RewardItem>\r\n            ))}\r\n          </AnimatePresence>\r\n        </RewardSection>\r\n\r\n        <UsersCount>{referralStats?.totalReferrals || 0} Users</UsersCount>\r\n\r\n        <InviteLinkSection>\r\n          <InviteLink>\r\n            <LinkText>https://t.me/OfficialNeroBot?start={referralCode}</LinkText>\r\n            <ButtonGroup>\r\n              <ActionButton\r\n                whileHover={{ scale: 1.05 }}\r\n                whileTap={{ scale: 0.95 }}\r\n                onClick={handleCopyLink}\r\n              >\r\n                <FaCopy />\r\n                Copy\r\n              </ActionButton>\r\n              <ActionButton\r\n                whileHover={{ scale: 1.05 }}\r\n                whileTap={{ scale: 0.95 }}\r\n                onClick={handleShare}\r\n              >\r\n                <FaShareAlt />\r\n                Share\r\n              </ActionButton>\r\n            </ButtonGroup>\r\n          </InviteLink>\r\n        </InviteLinkSection>\r\n\r\n        <BonusInfo>Invite and get 0.5% Bonus for each friend</BonusInfo>\r\n\r\n        <ReferralsList>\r\n          <ReferralsTitle>My Referrals:</ReferralsTitle>\r\n          {referralStats?.referrals && referralStats.referrals.length > 0 ? (\r\n            referralStats.referrals.map((referral, index) => (\r\n              <RewardItem key={index}>\r\n                <UserDetail>\r\n                  <Avatar src={referral.avatar || defaultAvatar} alt={referral.username} />\r\n                  <UserName>{referral.username}</UserName>\r\n                </UserDetail>\r\n                <CPLevel>CP {referral.cpLevel}</CPLevel>\r\n              </RewardItem>\r\n            ))\r\n          ) : (\r\n            <NoReferrals>You don't have referrals yet 😢</NoReferrals>\r\n          )}\r\n        </ReferralsList>\r\n      </ContentWrapper>\r\n      <Navbar />\r\n    </InviteWrapper>\r\n  );\r\n};\r\n\r\nexport default Invite;","import { __values } from 'tslib';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\n\nvar presenceId = 0;\nfunction getPresenceId() {\n    var id = presenceId;\n    presenceId++;\n    return id;\n}\nvar PresenceChild = function (_a) {\n    var children = _a.children, initial = _a.initial, isPresent = _a.isPresent, onExitComplete = _a.onExitComplete, custom = _a.custom, presenceAffectsLayout = _a.presenceAffectsLayout;\n    var presenceChildren = useConstant(newChildrenMap);\n    var id = useConstant(getPresenceId);\n    var context = useMemo(function () { return ({\n        id: id,\n        initial: initial,\n        isPresent: isPresent,\n        custom: custom,\n        onExitComplete: function (childId) {\n            var e_1, _a;\n            presenceChildren.set(childId, true);\n            try {\n                for (var _b = __values(presenceChildren.values()), _c = _b.next(); !_c.done; _c = _b.next()) {\n                    var isComplete = _c.value;\n                    if (!isComplete)\n                        return; // can stop searching when any is incomplete\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n            onExitComplete === null || onExitComplete === void 0 ? void 0 : onExitComplete();\n        },\n        register: function (childId) {\n            presenceChildren.set(childId, false);\n            return function () { return presenceChildren.delete(childId); };\n        },\n    }); }, \n    /**\n     * If the presence of a child affects the layout of the components around it,\n     * we want to make a new context value to ensure they get re-rendered\n     * so they can detect that layout change.\n     */\n    presenceAffectsLayout ? undefined : [isPresent]);\n    useMemo(function () {\n        presenceChildren.forEach(function (_, key) { return presenceChildren.set(key, false); });\n    }, [isPresent]);\n    /**\n     * If there's no `motion` components to fire exit animations, we want to remove this\n     * component immediately.\n     */\n    React.useEffect(function () {\n        !isPresent && !presenceChildren.size && (onExitComplete === null || onExitComplete === void 0 ? void 0 : onExitComplete());\n    }, [isPresent]);\n    return (React.createElement(PresenceContext.Provider, { value: context }, children));\n};\nfunction newChildrenMap() {\n    return new Map();\n}\n\nexport { PresenceChild };\n","import { __read, __spreadArray } from 'tslib';\nimport * as React from 'react';\nimport { useContext, useRef, useEffect, cloneElement, Children, isValidElement } from 'react';\nimport { useForceUpdate } from '../../utils/use-force-update.mjs';\nimport { PresenceChild } from './PresenceChild.mjs';\nimport { LayoutGroupContext } from '../../context/LayoutGroupContext.mjs';\n\nfunction getChildKey(child) {\n    return child.key || \"\";\n}\nfunction updateChildLookup(children, allChildren) {\n    var seenChildren = process.env.NODE_ENV !== \"production\" ? new Set() : null;\n    children.forEach(function (child) {\n        var key = getChildKey(child);\n        if (process.env.NODE_ENV !== \"production\" && seenChildren) {\n            if (seenChildren.has(key)) {\n                console.warn(\"Children of AnimatePresence require unique keys. \\\"\".concat(key, \"\\\" is a duplicate.\"));\n            }\n            seenChildren.add(key);\n        }\n        allChildren.set(key, child);\n    });\n}\nfunction onlyElements(children) {\n    var filtered = [];\n    // We use forEach here instead of map as map mutates the component key by preprending `.$`\n    Children.forEach(children, function (child) {\n        if (isValidElement(child))\n            filtered.push(child);\n    });\n    return filtered;\n}\n/**\n * `AnimatePresence` enables the animation of components that have been removed from the tree.\n *\n * When adding/removing more than a single child, every child **must** be given a unique `key` prop.\n *\n * Any `motion` components that have an `exit` property defined will animate out when removed from\n * the tree.\n *\n * ```jsx\n * import { motion, AnimatePresence } from 'framer-motion'\n *\n * export const Items = ({ items }) => (\n *   <AnimatePresence>\n *     {items.map(item => (\n *       <motion.div\n *         key={item.id}\n *         initial={{ opacity: 0 }}\n *         animate={{ opacity: 1 }}\n *         exit={{ opacity: 0 }}\n *       />\n *     ))}\n *   </AnimatePresence>\n * )\n * ```\n *\n * You can sequence exit animations throughout a tree using variants.\n *\n * If a child contains multiple `motion` components with `exit` props, it will only unmount the child\n * once all `motion` components have finished animating out. Likewise, any components using\n * `usePresence` all need to call `safeToRemove`.\n *\n * @public\n */\nvar AnimatePresence = function (_a) {\n    var children = _a.children, custom = _a.custom, _b = _a.initial, initial = _b === void 0 ? true : _b, onExitComplete = _a.onExitComplete, exitBeforeEnter = _a.exitBeforeEnter, _c = _a.presenceAffectsLayout, presenceAffectsLayout = _c === void 0 ? true : _c;\n    // We want to force a re-render once all exiting animations have finished. We\n    // either use a local forceRender function, or one from a parent context if it exists.\n    var _d = __read(useForceUpdate(), 1), forceRender = _d[0];\n    var forceRenderLayoutGroup = useContext(LayoutGroupContext).forceRender;\n    if (forceRenderLayoutGroup)\n        forceRender = forceRenderLayoutGroup;\n    var isInitialRender = useRef(true);\n    var isMounted = useRef(true);\n    useEffect(function () { return function () {\n        isMounted.current = false;\n    }; }, []);\n    // Filter out any children that aren't ReactElements. We can only track ReactElements with a props.key\n    var filteredChildren = onlyElements(children);\n    // Keep a living record of the children we're actually rendering so we\n    // can diff to figure out which are entering and exiting\n    var presentChildren = useRef(filteredChildren);\n    // A lookup table to quickly reference components by key\n    var allChildren = useRef(new Map()).current;\n    // A living record of all currently exiting components.\n    var exiting = useRef(new Set()).current;\n    updateChildLookup(filteredChildren, allChildren);\n    // If this is the initial component render, just deal with logic surrounding whether\n    // we play onMount animations or not.\n    if (isInitialRender.current) {\n        isInitialRender.current = false;\n        return (React.createElement(React.Fragment, null, filteredChildren.map(function (child) { return (React.createElement(PresenceChild, { key: getChildKey(child), isPresent: true, initial: initial ? undefined : false, presenceAffectsLayout: presenceAffectsLayout }, child)); })));\n    }\n    // If this is a subsequent render, deal with entering and exiting children\n    var childrenToRender = __spreadArray([], __read(filteredChildren), false);\n    // Diff the keys of the currently-present and target children to update our\n    // exiting list.\n    var presentKeys = presentChildren.current.map(getChildKey);\n    var targetKeys = filteredChildren.map(getChildKey);\n    // Diff the present children with our target children and mark those that are exiting\n    var numPresent = presentKeys.length;\n    for (var i = 0; i < numPresent; i++) {\n        var key = presentKeys[i];\n        if (targetKeys.indexOf(key) === -1) {\n            exiting.add(key);\n        }\n        else {\n            // In case this key has re-entered, remove from the exiting list\n            exiting.delete(key);\n        }\n    }\n    // If we currently have exiting children, and we're deferring rendering incoming children\n    // until after all current children have exiting, empty the childrenToRender array\n    if (exitBeforeEnter && exiting.size) {\n        childrenToRender = [];\n    }\n    // Loop through all currently exiting components and clone them to overwrite `animate`\n    // with any `exit` prop they might have defined.\n    exiting.forEach(function (key) {\n        // If this component is actually entering again, early return\n        if (targetKeys.indexOf(key) !== -1)\n            return;\n        var child = allChildren.get(key);\n        if (!child)\n            return;\n        var insertionIndex = presentKeys.indexOf(key);\n        var onExit = function () {\n            allChildren.delete(key);\n            exiting.delete(key);\n            // Remove this child from the present children\n            var removeIndex = presentChildren.current.findIndex(function (presentChild) { return presentChild.key === key; });\n            presentChildren.current.splice(removeIndex, 1);\n            // Defer re-rendering until all exiting children have indeed left\n            if (!exiting.size) {\n                presentChildren.current = filteredChildren;\n                if (isMounted.current === false) {\n                    return;\n                }\n                forceRender();\n                onExitComplete && onExitComplete();\n            }\n        };\n        childrenToRender.splice(insertionIndex, 0, React.createElement(PresenceChild, { key: getChildKey(child), isPresent: false, onExitComplete: onExit, custom: custom, presenceAffectsLayout: presenceAffectsLayout }, child));\n    });\n    // Add `MotionContext` even to children that don't need it to ensure we're rendering\n    // the same tree between renders\n    childrenToRender = childrenToRender.map(function (child) {\n        var key = child.key;\n        return exiting.has(key) ? (child) : (React.createElement(PresenceChild, { key: getChildKey(child), isPresent: true, presenceAffectsLayout: presenceAffectsLayout }, child));\n    });\n    presentChildren.current = childrenToRender;\n    if (process.env.NODE_ENV !== \"production\" &&\n        exitBeforeEnter &&\n        childrenToRender.length > 1) {\n        console.warn(\"You're attempting to animate multiple children within AnimatePresence, but its exitBeforeEnter prop is set to true. This will lead to odd visual behaviour.\");\n    }\n    return (React.createElement(React.Fragment, null, exiting.size\n        ? childrenToRender\n        : childrenToRender.map(function (child) { return cloneElement(child); })));\n};\n\nexport { AnimatePresence };\n","import { __read } from 'tslib';\nimport sync from 'framesync';\nimport { useRef, useState, useCallback } from 'react';\nimport { useUnmountEffect } from './use-unmount-effect.mjs';\n\nfunction useForceUpdate() {\n    var isUnmountingRef = useRef(false);\n    var _a = __read(useState(0), 2), forcedRenderCount = _a[0], setForcedRenderCount = _a[1];\n    useUnmountEffect(function () { return (isUnmountingRef.current = true); });\n    var forceRender = useCallback(function () {\n        !isUnmountingRef.current && setForcedRenderCount(forcedRenderCount + 1);\n    }, [forcedRenderCount]);\n    /**\n     * Defer this to the end of the next animation frame in case there are multiple\n     * synchronous calls.\n     */\n    var deferredForceRender = useCallback(function () { return sync.postRender(forceRender); }, [forceRender]);\n    return [deferredForceRender, forcedRenderCount];\n}\n\nexport { useForceUpdate };\n"],"names":["NavbarContainer","styled","div","NavbarIcon","props","active","NavbarLabel","Navbar","navigate","useNavigate","location","useLocation","navItems","path","icon","FaHome","label","FaSyncAlt","FaChartBar","FaUsers","FaUser","FaCog","_jsx","children","map","item","_jsxs","pathname","onClick","apiFunc","data","setData","useState","loading","setLoading","error","setError","execute","useCallback","async","result","arguments","err","toast","console","InviteWrapper","motion","backgroundImage","Header","Logo","img","ContentWrapper","Title","h1","UserInfo","UserDetail","Avatar","UserName","span","CPLevel","Referrals","ReferralIcon","RewardSection","RewardTitle","h3","RewardItem","RewardInfo","RewardText","ClaimButton","button","UsersCount","InviteLinkSection","InviteLink","LinkText","ButtonGroup","ActionButton","BonusInfo","ReferralsList","ReferralsTitle","NoReferrals","p","Invite","user","useAuth","referralCode","setReferralCode","referralStats","setReferralStats","generateCode","useApi","generateReferralCode","applyCode","applyReferralCode","fetchReferralStats","getReferralStats","useEffect","initializeReferralCode","stats","fetchStats","handleCopyLink","navigator","clipboard","writeText","initial","opacity","animate","exit","src","logo","alt","neuro","avatar","defaultAvatar","username","cpLevel","totalReferrals","AnimatePresence","id","friends","reward","y","toLocaleString","whileHover","scale","whileTap","log","rewardId","handleClaim","disabled","FaCopy","handleShare","share","title","text","url","catch","FaShareAlt","referrals","length","referral","index","presenceId","getPresenceId","PresenceChild","_a","isPresent","onExitComplete","custom","presenceAffectsLayout","presenceChildren","useConstant","newChildrenMap","context","useMemo","childId","e_1","set","_b","__values","values","_c","next","done","value","e_1_1","return","call","register","delete","undefined","forEach","_","key","React","size","PresenceContext","Provider","Map","getChildKey","child","exitBeforeEnter","_d","__read","isUnmountingRef","useRef","forcedRenderCount","setForcedRenderCount","useUnmountEffect","current","forceRender","sync","postRender","useForceUpdate","forceRenderLayoutGroup","useContext","LayoutGroupContext","isInitialRender","isMounted","filteredChildren","filtered","Children","isValidElement","push","onlyElements","presentChildren","allChildren","exiting","Set","updateChildLookup","childrenToRender","__spreadArray","presentKeys","targetKeys","numPresent","i","indexOf","add","get","insertionIndex","splice","removeIndex","findIndex","presentChild","has","cloneElement"],"sourceRoot":""}