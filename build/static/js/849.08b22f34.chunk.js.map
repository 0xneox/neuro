{"version":3,"file":"static/js/849.08b22f34.chunk.js","mappings":"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","sources":["components/Navbar.js","hooks/useApi.js","pages/Quest.js"],"sourcesContent":["// components/Navbar.js\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport { FaHome, FaSyncAlt, FaChartBar, FaUser, FaUsers, FaCog } from 'react-icons/fa';\r\n\r\nconst NavbarContainer = styled.div`\r\n  position: fixed;\r\n  bottom: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  background: linear-gradient(to right, #071665, #0348B2, #0870DE);\r\n  display: flex;\r\n  justify-content: space-around;\r\n  padding: 10px 0;\r\n  z-index: 1000;\r\n`;\r\n\r\nconst NavbarIcon = styled.div`\r\n  color: ${props => (props.active ? '#ffffff' : 'rgba(255, 255, 255, 0.6)')};\r\n  font-size: 20px;\r\n  cursor: pointer;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  transition: all 0.3s ease;\r\n\r\n  &:hover {\r\n    color: #ffffff;\r\n    transform: translateY(-3px);\r\n  }\r\n`;\r\n\r\nconst NavbarLabel = styled.div`\r\n  font-size: 12px;\r\n  margin-top: 4px;\r\n`;\r\n\r\nconst Navbar = () => {\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n\r\n  const navItems = [\r\n    { path: '/home', icon: FaHome, label: 'Home' },\r\n    { path: '/quest', icon: FaSyncAlt, label: 'Quest' },\r\n    { path: '/leaderboard', icon: FaChartBar, label: 'Leaderboard' },\r\n    { path: '/invite', icon: FaUsers, label: 'Invite' },\r\n    { path: '/profile', icon: FaUser, label: 'Profile' },\r\n    { path: '/settings', icon: FaCog, label: 'Settings' },\r\n  ];\r\n\r\n  return (\r\n    <NavbarContainer>\r\n      {navItems.map(item => (\r\n        <NavbarIcon \r\n          key={item.path}\r\n          active={location.pathname === item.path} \r\n          onClick={() => navigate(item.path)}\r\n        >\r\n          <item.icon />\r\n          <NavbarLabel>{item.label}</NavbarLabel>\r\n        </NavbarIcon>\r\n      ))}\r\n    </NavbarContainer>\r\n  );\r\n};\r\n\r\nexport default Navbar;","import { useState, useCallback } from 'react';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst useApi = (apiFunc) => {\r\n  const [data, setData] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const execute = useCallback(async (...args) => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      const result = await apiFunc(...args);\r\n      setData(result);\r\n      return result;\r\n    } catch (err) {\r\n      setError(err);\r\n      toast.error('An error occurred. Please try again later.');\r\n      console.error('API Error:', err);\r\n      throw err; // Re-throw the error for the component to handle if needed\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [apiFunc]);\r\n\r\n  return { execute, data, loading, error };\r\n};\r\n\r\nexport default useApi;","import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport { motion, AnimatePresence } from 'framer-motion';\r\nimport { getQuests, claimQuest, getAchievements, claimAchievement } from '../services/api';\r\nimport useApi from '../hooks/useApi';\r\nimport { FaChevronDown, FaLock, FaGem, FaTrophy, FaTwitter, FaDiscord, FaTelegram, FaCheckCircle } from 'react-icons/fa';\r\nimport Navbar from '../components/Navbar';\r\nimport logoLeft from \"../Images/logoo.png\";\r\nimport logoRight from \"../Images/logo1.png\";\r\nimport backgroundImage from \"../Images/bg5.jpg\";\r\n\r\nconst QuestWrapper = styled.div`\r\n  padding: 20px;\r\n  color: #ffffff;\r\n  background-color: #000033;\r\n  background-image: url(${backgroundImage});\r\n  background-size: cover;\r\n  background-position: center;\r\n  min-height: 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst Header = styled.header`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 10px 20px;\r\n  width: 100%;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  box-sizing: border-box;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  z-index: 1000;\r\n`;\r\n\r\nconst Logo = styled.img`\r\n  height: 40px;\r\n  width: auto;\r\n`;\r\n\r\nconst ContentWrapper = styled.div`\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding-top: 60px; // Add padding to account for the fixed header\r\n`;\r\n\r\nconst SubHeader = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst DropdownButton = styled.button`\r\n  background: none;\r\n  border: none;\r\n  color: white;\r\n  font-size: 18px;\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nconst XPEarned = styled.div`\r\n  background-color: #3d85c6;\r\n  padding: 5px 15px;\r\n  border-radius: 20px;\r\n  font-size: 14px;\r\n`;\r\n\r\nconst TabContainer = styled.div`\r\n  display: flex;\r\n  background-color: rgba(255, 255, 255, 0.1);\r\n  border-radius: 25px;\r\n  padding: 5px;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst Tab = styled.button`\r\n  flex: 1;\r\n  padding: 10px;\r\n  border: none;\r\n  background-color: ${props => props.active ? '#3d85c6' : 'transparent'};\r\n  color: white;\r\n  border-radius: 20px;\r\n  font-size: 16px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  transition: background-color 0.3s ease;\r\n`;\r\n\r\nconst Content = styled.div`\r\n  flex-grow: 1;\r\n`;\r\n\r\nconst ItemWrapper = styled.div`\r\n  background-color: rgba(255, 255, 255, 0.1);\r\n  border-radius: 10px;\r\n  padding: 15px;\r\n  margin-bottom: 10px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`;\r\n\r\nconst ItemInfo = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nconst ItemIcon = styled.div`\r\n  width: 40px;\r\n  height: 40px;\r\n  background-color: #3d85c6;\r\n  border-radius: 50%;\r\n  margin-right: 15px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst ItemDetails = styled.div``;\r\n\r\nconst ItemTitle = styled.h3`\r\n  margin: 0;\r\n  font-size: 16px;\r\n`;\r\n\r\nconst ItemDescription = styled.p`\r\n  margin: 5px 0 0;\r\n  font-size: 14px;\r\n  color: #888;\r\n`;\r\n\r\nconst ActionButton = styled.button`\r\n  background-color: ${props => props.claimed ? '#888' : props.locked ? '#d32f2f' : '#00c853'};\r\n  color: white;\r\n  border: none;\r\n  padding: 8px 20px;\r\n  border-radius: 20px;\r\n  font-size: 14px;\r\n  cursor: ${props => props.claimed || props.locked ? 'default' : 'pointer'};\r\n  transition: background-color 0.3s ease, transform 0.3s ease;\r\n\r\n  &:hover {\r\n    transform: ${props => !props.claimed && !props.locked ? 'scale(1.05)' : 'none'};\r\n  }\r\n`;\r\n\r\nconst LoadingWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 200px;\r\n  font-size: 18px;\r\n  color: #ffffff;\r\n`;\r\n\r\nconst ErrorWrapper = styled.div`\r\n  color: #ff6b6b;\r\n  text-align: center;\r\n  margin-top: 20px;\r\n  font-size: 16px;\r\n`;\r\n\r\nconst mockQuests = [\r\n  { id: 1, title: 'Follow on Twitter', description: 'Follow the official Twitter account', icon: <FaTwitter />, claimed: false, locked: false },\r\n  { id: 2, title: 'Retweet Tweet', description: 'Retweet the latest announcement tweet', icon: <FaTwitter />, claimed: false, locked: false },\r\n  { id: 3, title: 'Join Discord', description: 'Join the official Discord server', icon: <FaDiscord />, claimed: false, locked: false },\r\n  { id: 4, title: 'Greet in Discord', description: 'Say hello in the introduction channel', icon: <FaDiscord />, claimed: false, locked: false },\r\n  { id: 5, title: 'Join Telegram Group', description: 'Join the official Telegram group', icon: <FaTelegram />, claimed: false, locked: false },\r\n  { id: 6, title: 'Invite a Friend', description: 'Invite a friend to the game', icon: <FaCheckCircle />, claimed: false, locked: false },\r\n  { id: 7, title: 'Daily Login', description: 'Log in for 7 consecutive days', icon: <FaCheckCircle />, claimed: false, locked: false },\r\n  { id: 8, title: 'Upgrade GPU', description: 'Upgrade your GPU once', icon: <FaCheckCircle />, claimed: false, locked: true },\r\n  { id: 9, title: 'Tap 100 Times', description: 'Tap the GPU 100 times', icon: <FaCheckCircle />, claimed: false, locked: false },\r\n  { id: 10, title: 'Earn 1000 NLOV', description: 'Earn a total of 1000 NLOV', icon: <FaCheckCircle />, claimed: false, locked: true },\r\n];\r\n\r\nconst mockAchievements = [\r\n  { id: 1, title: 'Beginner Miner', description: 'Tap the GPU for the first time', icon: '🏆', progress: 1, required: 1, claimed: true },\r\n  { id: 2, title: 'Social Butterfly', description: 'Complete all social quests', icon: '🦋', progress: 3, required: 5, claimed: false },\r\n  { id: 3, title: 'Upgrade Master', description: 'Upgrade the GPU 10 times', icon: '🚀', progress: 3, required: 10, claimed: false },\r\n  { id: 4, title: 'NLOV Millionaire', description: 'Earn 100,000 NLOV', icon: '💰', progress: 25000, required: 100000, claimed: false },\r\n];\r\n\r\nconst Quest = () => {\r\n  const [activeTab, setActiveTab] = useState('quest');\r\n  const [quests, setQuests] = useState(mockQuests);\r\n  const [achievements, setAchievements] = useState(mockAchievements);\r\n\r\n  const { execute: fetchQuests, loading: questsLoading, error: questsError } = useApi(getQuests);\r\n  const { execute: executeQuestClaim, loading: questClaimLoading } = useApi(claimQuest);\r\n  const { execute: fetchAchievements, loading: achievementsLoading, error: achievementsError } = useApi(getAchievements);\r\n  const { execute: executeAchievementClaim, loading: achievementClaimLoading } = useApi(claimAchievement);\r\n\r\n  useEffect(() => {\r\n    // In a real application, you would fetch data from the API here\r\n    // For now, we're using the mock data\r\n    // fetchQuests().then(setQuests);\r\n    // fetchAchievements().then(setAchievements);\r\n  }, []);\r\n\r\n  const handleQuestClaim = async (questId) => {\r\n    try {\r\n      // Simulate API call\r\n      // await executeQuestClaim(questId);\r\n      setQuests(quests.map(quest => \r\n        quest.id === questId ? { ...quest, claimed: true } : quest\r\n      ));\r\n    } catch (error) {\r\n      console.error('Failed to claim quest:', error);\r\n    }\r\n  };\r\n\r\n  const handleAchievementClaim = async (achievementId) => {\r\n    try {\r\n      // Simulate API call\r\n      // await executeAchievementClaim(achievementId);\r\n      setAchievements(achievements.map(achievement => \r\n        achievement.id === achievementId ? { ...achievement, claimed: true } : achievement\r\n      ));\r\n    } catch (error) {\r\n      console.error('Failed to claim achievement:', error);\r\n    }\r\n  };\r\n\r\n  const renderQuests = () => {\r\n    if (questsLoading) {\r\n      return <LoadingWrapper>Loading quests...</LoadingWrapper>;\r\n    }\r\n\r\n    if (questsError) {\r\n      return <ErrorWrapper>Failed to load quests. Please try again later.</ErrorWrapper>;\r\n    }\r\n\r\n    return quests.map(quest => (\r\n      <ItemWrapper key={quest.id}>\r\n        <ItemInfo>\r\n          <ItemIcon>{quest.icon}</ItemIcon>\r\n          <ItemDetails>\r\n            <ItemTitle>{quest.title}</ItemTitle>\r\n            <ItemDescription>{quest.description}</ItemDescription>\r\n          </ItemDetails>\r\n        </ItemInfo>\r\n        <ActionButton\r\n          claimed={quest.claimed}\r\n          locked={quest.locked}\r\n          onClick={() => !quest.claimed && !quest.locked && handleQuestClaim(quest.id)}\r\n        >\r\n          {quest.claimed ? 'Claimed' : quest.locked ? 'Locked' : 'Claim'}\r\n        </ActionButton>\r\n      </ItemWrapper>\r\n    ));\r\n  };\r\n\r\n  const renderAchievements = () => {\r\n    if (achievementsLoading) {\r\n      return <LoadingWrapper>Loading achievements...</LoadingWrapper>;\r\n    }\r\n\r\n    if (achievementsError) {\r\n      return <ErrorWrapper>Failed to load achievements. Please try again later.</ErrorWrapper>;\r\n    }\r\n\r\n    return achievements.map(achievement => (\r\n      <ItemWrapper key={achievement.id}>\r\n        <ItemInfo>\r\n          <ItemIcon>{achievement.icon}</ItemIcon>\r\n          <ItemDetails>\r\n            <ItemTitle>{achievement.title}</ItemTitle>\r\n            <ItemDescription>{achievement.description}</ItemDescription>\r\n          </ItemDetails>\r\n        </ItemInfo>\r\n        <ActionButton\r\n          claimed={achievement.claimed}\r\n          onClick={() => !achievement.claimed && handleAchievementClaim(achievement.id)}\r\n        >\r\n          {achievement.claimed ? 'Claimed' : 'Claim'}\r\n        </ActionButton>\r\n      </ItemWrapper>\r\n    ));\r\n  };\r\n\r\n  const renderContent = () => {\r\n    if (activeTab === 'quest') {\r\n      return renderQuests();\r\n    } else if (activeTab === 'achievement') {\r\n      return renderAchievements();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <QuestWrapper>\r\n      <Header>\r\n        <Logo src={logoLeft} alt=\"Logo\" />\r\n        <Navbar />\r\n        <Logo src={logoRight} alt=\"Logo\" />\r\n      </Header>\r\n\r\n      <ContentWrapper>\r\n        <SubHeader>\r\n          <DropdownButton>\r\n            Current Quest\r\n            <FaChevronDown style={{marginLeft: '5px'}} />\r\n          </DropdownButton>\r\n          <XPEarned>XP Earned: 5000</XPEarned>\r\n        </SubHeader>\r\n\r\n        <TabContainer>\r\n          <Tab active={activeTab === 'quest'} onClick={() => setActiveTab('quest')}>\r\n            <FaGem style={{marginRight: '5px'}} /> Quests\r\n          </Tab>\r\n          <Tab active={activeTab === 'achievement'} onClick={() => setActiveTab('achievement')}>\r\n            <FaTrophy style={{marginRight: '5px'}} /> Achievements\r\n          </Tab>\r\n        </TabContainer>\r\n\r\n        <Content>\r\n          {renderContent()}\r\n        </Content>\r\n      </ContentWrapper>\r\n    </QuestWrapper>\r\n  );\r\n};\r\n\r\nexport default Quest;\r\n"],"names":["NavbarContainer","styled","div","NavbarIcon","props","active","NavbarLabel","Navbar","navigate","useNavigate","location","useLocation","navItems","path","icon","FaHome","label","FaSyncAlt","FaChartBar","FaUsers","FaUser","FaCog","_jsx","children","map","item","_jsxs","pathname","onClick","apiFunc","data","setData","useState","loading","setLoading","error","setError","execute","useCallback","async","result","arguments","err","toast","console","QuestWrapper","backgroundImage","Header","header","Logo","img","ContentWrapper","SubHeader","DropdownButton","button","XPEarned","TabContainer","Tab","Content","ItemWrapper","ItemInfo","ItemIcon","ItemDetails","ItemTitle","h3","ItemDescription","p","ActionButton","claimed","locked","LoadingWrapper","ErrorWrapper","mockQuests","id","title","description","FaTwitter","FaDiscord","FaTelegram","FaCheckCircle","mockAchievements","progress","required","Quest","activeTab","setActiveTab","quests","setQuests","achievements","setAchievements","fetchQuests","questsLoading","questsError","useApi","getQuests","executeQuestClaim","questClaimLoading","claimQuest","fetchAchievements","achievementsLoading","achievementsError","getAchievements","executeAchievementClaim","achievementClaimLoading","claimAchievement","useEffect","renderQuests","quest","questId","handleQuestClaim","renderAchievements","achievement","achievementId","handleAchievementClaim","src","logoLeft","alt","logoRight","FaChevronDown","style","marginLeft","FaGem","marginRight","FaTrophy"],"sourceRoot":""}