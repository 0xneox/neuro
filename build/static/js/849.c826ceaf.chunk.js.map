{"version":3,"file":"static/js/849.c826ceaf.chunk.js","mappings":"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","sources":["components/Navbar.js","hooks/useApi.js","pages/Quest.js"],"sourcesContent":["// components/Navbar.js\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport { FaHome, FaSyncAlt, FaChartBar, FaUser, FaUsers, FaCog, FaUserFriends } from 'react-icons/fa';\r\n\r\nconst NavbarContainer = styled.div`\r\n  position: fixed;\r\n  bottom: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  background: linear-gradient(to right, #071665, #0348B2, #0870DE);\r\n  display: flex;\r\n  justify-content: space-around;\r\n  padding: 10px 0;\r\n  z-index: 1000;\r\n`;\r\n\r\nconst NavbarIcon = styled.div`\r\n  color: ${props => (props.active ? '#ffffff' : 'rgba(255, 255, 255, 0.6)')};\r\n  font-size: 20px;\r\n  cursor: pointer;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  transition: all 0.3s ease;\r\n\r\n  &:hover {\r\n    color: #ffffff;\r\n    transform: translateY(-3px);\r\n  }\r\n`;\r\n\r\nconst NavbarLabel = styled.div`\r\n  font-size: 12px;\r\n  margin-top: 4px;\r\n`;\r\n\r\nconst Navbar = () => {\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n\r\n  const navItems = [\r\n    { path: '/home', icon: FaHome, label: 'Home' },\r\n    { path: '/quest', icon: FaSyncAlt, label: 'Quest' },\r\n    { path: '/leaderboard', icon: FaChartBar, label: 'Leaderboard' },\r\n    {path:   '/invite', icon: FaUserFriends, label: 'Invite'},\r\n    { path: '/profile', icon: FaUser, label: 'Profile' },\r\n\r\n  ];\r\n\r\n  return (\r\n    <NavbarContainer>\r\n      {navItems.map(item => (\r\n        <NavbarIcon \r\n          key={item.path}\r\n          active={location.pathname === item.path} \r\n          onClick={() => navigate(item.path)}\r\n        >\r\n          <item.icon />\r\n          <NavbarLabel>{item.label}</NavbarLabel>\r\n        </NavbarIcon>\r\n      ))}\r\n    </NavbarContainer>\r\n  );\r\n};\r\n\r\nexport default Navbar;","import { useState, useCallback } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport axios from 'axios';\r\n\r\nconst api = axios.create({\r\n  baseURL: process.env.REACT_APP_API_BASE_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\napi.interceptors.request.use((config) => {\r\n  const token = localStorage.getItem('token');\r\n  if (token) {\r\n    config.headers['Authorization'] = `Bearer ${token}`;\r\n  }\r\n  return config;\r\n}, (error) => {\r\n  return Promise.reject(error);\r\n});\r\n\r\nconst useApi = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const request = useCallback(async (method, url, data = null, config = {}) => {\r\n    setLoading(true);\r\n    setError(null);\r\n\r\n    try {\r\n      const response = await api({ method, url, data, ...config });\r\n      return response.data;\r\n    } catch (err) {\r\n      setError(err.response?.data?.message || 'An error occurred');\r\n      toast.error(err.response?.data?.message || 'An error occurred');\r\n      throw err;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  const get = useCallback((url, config) => request('get', url, null, config), [request]);\r\n  const post = useCallback((url, data, config) => request('post', url, data, config), [request]);\r\n  const put = useCallback((url, data, config) => request('put', url, data, config), [request]);\r\n  const del = useCallback((url, config) => request('delete', url, null, config), [request]);\r\n\r\n  const authenticateTelegram = useCallback(async (telegramData) => {\r\n    setLoading(true);\r\n    setError(null);\r\n\r\n    try {\r\n      const response = await api.post('/auth/telegram', telegramData);\r\n      return response.data;\r\n    } catch (err) {\r\n      setError(err.response?.data?.message || 'Authentication failed');\r\n      toast.error(err.response?.data?.message || 'Authentication failed');\r\n      throw err;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  return { get, post, put, delete: del, authenticateTelegram, loading, error };\r\n};\r\n\r\nexport default useApi;","import React, { useState, useEffect, useCallback } from 'react';\r\nimport styled from 'styled-components';\r\nimport { motion, AnimatePresence } from 'framer-motion';\r\nimport { FaChevronDown, FaLock, FaGem, FaTrophy, FaTwitter, FaDiscord, FaTelegram, FaCheckCircle, FaMedium, FaReddit, FaGithub } from 'react-icons/fa';\r\nimport Navbar from '../components/Navbar';\r\nimport logoLeft from \"../Images/logo.png\";\r\nimport logoRight from \"../Images/logo1.png\";\r\nimport backgroundImage from \"../Images/background_image.png\";\r\nimport useApi from '../hooks/useApi'; // Assume we have this custom hook for API calls\r\n\r\nconst QuestWrapper = styled.div`\r\n  padding: 20px;\r\n  color: #ffffff;\r\n  background-color: #000033;\r\n  background-image: url(${backgroundImage});\r\n  background-size: cover;\r\n  background-position: center;\r\n  min-height: 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst Header = styled.header`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 10px 20px;\r\n  width: 100%;\r\n  box-sizing: border-box;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  z-index: 1000;\r\n`;\r\n\r\nconst Logo = styled.img`\r\n  height: 20px;\r\n  width: auto;\r\n`;\r\n\r\nconst RightLogo = styled(Logo)`\r\n  height: 30px; // Increased size for the right logo\r\n`;\r\n\r\nconst ContentWrapper = styled.div`\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding-top: 80px;\r\n  max-width: 800px;\r\n  margin: 0 auto;\r\n  width: 100%;\r\n`;\r\n\r\nconst SubHeader = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst DropdownButton = styled.button`\r\n  background: none;\r\n  border: none;\r\n  color: white;\r\n  font-size: 18px;\r\n  display: flex;\r\n  align-items: center;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst XPEarned = styled.div`\r\n  background-color: #3d85c6;\r\n  padding: 5px 15px;\r\n  border-radius: 20px;\r\n  font-size: 14px;\r\n`;\r\n\r\nconst TabContainer = styled.div`\r\n  display: flex;\r\n  background-color: rgba(255, 255, 255, 0.1);\r\n  border-radius: 25px;\r\n  padding: 5px;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst Tab = styled.button`\r\n  flex: 1;\r\n  padding: 10px;\r\n  border: none;\r\n  background-color: ${props => props.active ? '#3d85c6' : 'transparent'};\r\n  color: white;\r\n  border-radius: 20px;\r\n  font-size: 16px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  transition: background-color 0.3s ease;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst Content = styled.div`\r\n  flex-grow: 1;\r\n`;\r\n\r\nconst ItemWrapper = styled(motion.div)`\r\n  background-color: rgba(255, 255, 255, 0.1);\r\n  border-radius: 10px;\r\n  padding: 15px;\r\n  margin-bottom: 10px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`;\r\n\r\nconst ItemInfo = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  flex: 1;\r\n`;\r\n\r\nconst ItemIcon = styled.div`\r\n  width: 40px;\r\n  height: 40px;\r\n  background-color: #3d85c6;\r\n  border-radius: 50%;\r\n  margin-right: 15px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-size: 20px;\r\n`;\r\n\r\nconst ItemDetails = styled.div`\r\n  flex: 1;\r\n`;\r\n\r\n\r\nconst ItemDescription = styled.p`\r\n  margin: 5px 0 0;\r\n  font-size: 14px;\r\n  color: #bbb;\r\n`;\r\n\r\n\r\nconst ClaimFeedback = styled(motion.div)`\r\n  position: fixed;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  background-color: rgba(0, 255, 0, 0.8);\r\n  color: white;\r\n  padding: 20px;\r\n  border-radius: 10px;\r\n  font-size: 18px;\r\n  z-index: 1000;\r\n`;\r\n\r\nconst ItemTitle = styled.h3`\r\n  margin: 0;\r\n  font-size: 16px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: flex-start;\r\n`;\r\n\r\nconst XPBadge = styled.span`\r\n  background-color: #4caf50;\r\n  color: white;\r\n  padding: 2px 8px;\r\n  border-radius: 10px;\r\n  font-size: 12px;\r\n  margin-right: 10px;\r\n`;\r\n\r\nconst QuestTitle = styled.span`\r\n  flex: 1;\r\n`;\r\n\r\nconst ActionButton = styled.button`\r\n  background-color: ${props => props.claimed ? '#888' : props.locked ? '#d32f2f' : '#00c853'};\r\n  color: white;\r\n  border: none;\r\n  padding: 8px 20px;\r\n  border-radius: 20px;\r\n  font-size: 12px;\r\n  cursor: ${props => props.claimed || props.locked ? 'default' : 'pointer'};\r\n  transition: background-color 0.3s ease, transform 0.3s ease;\r\n  min-width: 80px;\r\n  text-align: center;\r\n\r\n  &:hover {\r\n    transform: ${props => !props.claimed && !props.locked ? 'scale(1.05)' : 'none'};\r\n  }\r\n`;\r\n\r\n// Mock data (maintained from the original code)\r\nconst achievementLevels = [\r\n  \"Novice\", \"Quest Seeker\", \"Architect\", \"Rising Star\", \"Elite Explorer\", \"Supreme Strategist\"\r\n];\r\n\r\nconst Quest = () => {\r\n  const [activeTab, setActiveTab] = useState('quest');\r\n  const [questList, setQuestList] = useState([]);\r\n  const [achievementList, setAchievementList] = useState([]);\r\n  const [showClaimFeedback, setShowClaimFeedback] = useState(false);\r\n  const [totalXP, setTotalXP] = useState(0);\r\n\r\n  const api = useApi();\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const [questsData, achievementsData] = await Promise.all([\r\n          api.get('/api/quests'),\r\n          api.get('/api/achievements')\r\n        ]);\r\n        setQuestList(questsData);\r\n        setAchievementList(achievementsData);\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [api]);\r\n\r\n  const handleQuestClaim = useCallback(async (questId) => {\r\n    try {\r\n      const response = await api.post(`/api/quests/${questId}/claim`);\r\n      setQuestList(prevQuests => prevQuests.map(quest => \r\n        quest.id === questId ? { ...quest, claimed: true } : quest\r\n      ));\r\n      setTotalXP(prevXP => prevXP + response.xpGained);\r\n      setShowClaimFeedback(true);\r\n      setTimeout(() => setShowClaimFeedback(false), 2000);\r\n    } catch (error) {\r\n      console.error('Error claiming quest:', error);\r\n    }\r\n  }, [api]);\r\n\r\n  const handleAchievementClaim = useCallback(async (achievementId) => {\r\n    try {\r\n      const response = await api.post(`/api/achievements/${achievementId}/claim`);\r\n      setAchievementList(prevAchievements => prevAchievements.map(achievement => \r\n        achievement.id === achievementId ? { ...achievement, claimed: true } : achievement\r\n      ));\r\n      setTotalXP(prevXP => prevXP + response.xpGained);\r\n      setShowClaimFeedback(true);\r\n      setTimeout(() => setShowClaimFeedback(false), 2000);\r\n    } catch (error) {\r\n      console.error('Error claiming achievement:', error);\r\n    }\r\n  }, [api]);\r\n\r\n  const renderQuests = () => (\r\n    questList.map(quest => (\r\n      <ItemWrapper key={quest.id} animate={{ opacity: 1 }} initial={{ opacity: 0 }} exit={{ opacity: 0 }}>\r\n        <ItemInfo>\r\n          <ItemIcon>{quest.icon}</ItemIcon>\r\n          <ItemDetails>\r\n            <ItemTitle>\r\n              <XPBadge>{quest.xp} XP</XPBadge>\r\n              <QuestTitle>{quest.title}</QuestTitle>\r\n            </ItemTitle>\r\n            <ItemDescription>{quest.description}</ItemDescription>\r\n          </ItemDetails>\r\n        </ItemInfo>\r\n        <ActionButton\r\n          claimed={quest.claimed}\r\n          locked={quest.locked}\r\n          onClick={() => !quest.claimed && !quest.locked && handleQuestClaim(quest.id)}\r\n        >\r\n          {quest.claimed ? 'Claimed' : quest.locked ? 'Locked' : 'Claim'}\r\n        </ActionButton>\r\n      </ItemWrapper>\r\n    ))\r\n  );\r\n\r\n  const renderAchievements = () => (\r\n    achievementList.map(achievement => (\r\n      <ItemWrapper key={achievement.id} animate={{ opacity: 1 }} initial={{ opacity: 0 }} exit={{ opacity: 0 }}>\r\n        <ItemInfo>\r\n          <ItemIcon>{achievement.icon}</ItemIcon>\r\n          <ItemDetails>\r\n            <ItemTitle>\r\n              <XPBadge>{achievement.level}</XPBadge>\r\n              <QuestTitle>{achievement.title}</QuestTitle>\r\n            </ItemTitle>\r\n            <ItemDescription>{achievement.description}</ItemDescription>\r\n          </ItemDetails>\r\n        </ItemInfo>\r\n        <ActionButton\r\n          claimed={achievement.claimed}\r\n          onClick={() => !achievement.claimed && handleAchievementClaim(achievement.id)}\r\n        >\r\n          {achievement.claimed ? 'Claimed' : `${achievement.progress}/${achievement.required}`}\r\n        </ActionButton>\r\n      </ItemWrapper>\r\n    ))\r\n  );\r\n\r\n  return (\r\n    <QuestWrapper>\r\n      <Header>\r\n        <Logo src={logoLeft} alt=\"Logo\" />\r\n        <RightLogo src={logoRight} alt=\"Logo\" />\r\n      </Header>\r\n\r\n      <ContentWrapper>\r\n        <SubHeader>\r\n          <DropdownButton>\r\n            Current Quest\r\n            <FaChevronDown style={{marginLeft: '5px'}} />\r\n          </DropdownButton>\r\n          <XPEarned>XP Earned: {totalXP}</XPEarned>\r\n        </SubHeader>\r\n\r\n        <TabContainer>\r\n          <Tab active={activeTab === 'quest'} onClick={() => setActiveTab('quest')}>\r\n            <FaGem style={{marginRight: '5px'}} /> Quests\r\n          </Tab>\r\n          <Tab active={activeTab === 'achievement'} onClick={() => setActiveTab('achievement')}>\r\n            <FaTrophy style={{marginRight: '5px'}} /> Achievements\r\n          </Tab>\r\n        </TabContainer>\r\n\r\n        <Content>\r\n          <AnimatePresence>\r\n            {activeTab === 'quest' ? renderQuests() : renderAchievements()}\r\n          </AnimatePresence>\r\n        </Content>\r\n      </ContentWrapper>\r\n\r\n      <AnimatePresence>\r\n        {showClaimFeedback && (\r\n          <ClaimFeedback\r\n            initial={{ opacity: 0, y: 50 }}\r\n            animate={{ opacity: 1, y: 0 }}\r\n            exit={{ opacity: 0, y: 50 }}\r\n          >\r\n            {activeTab === 'quest' ? 'Quest claimed successfully!' : 'Achievement unlocked!'}\r\n          </ClaimFeedback>\r\n        )}\r\n      </AnimatePresence>\r\n\r\n      <Navbar />\r\n    </QuestWrapper>\r\n  );\r\n};\r\n\r\nexport default React.memo(Quest);"],"names":["NavbarContainer","styled","div","NavbarIcon","props","active","NavbarLabel","Navbar","navigate","useNavigate","location","useLocation","navItems","path","icon","FaHome","label","FaSyncAlt","FaChartBar","FaUserFriends","FaUser","_jsx","children","map","item","_jsxs","pathname","onClick","api","axios","create","baseURL","process","REACT_APP_API_BASE_URL","headers","interceptors","request","use","config","token","localStorage","getItem","error","Promise","reject","useApi","loading","setLoading","useState","setError","useCallback","async","method","url","data","arguments","length","undefined","err","_err$response","_err$response$data","_err$response2","_err$response2$data","response","message","toast","get","post","put","delete","authenticateTelegram","telegramData","_err$response3","_err$response3$data","_err$response4","_err$response4$data","QuestWrapper","backgroundImage","Header","header","Logo","img","RightLogo","ContentWrapper","SubHeader","DropdownButton","button","XPEarned","TabContainer","Tab","Content","ItemWrapper","motion","ItemInfo","ItemIcon","ItemDetails","ItemDescription","p","ClaimFeedback","ItemTitle","h3","XPBadge","span","QuestTitle","ActionButton","claimed","locked","Quest","activeTab","setActiveTab","questList","setQuestList","achievementList","setAchievementList","showClaimFeedback","setShowClaimFeedback","totalXP","setTotalXP","useEffect","questsData","achievementsData","all","console","fetchData","handleQuestClaim","questId","prevQuests","quest","id","prevXP","xpGained","setTimeout","handleAchievementClaim","achievementId","prevAchievements","achievement","src","logoLeft","alt","logoRight","FaChevronDown","style","marginLeft","FaGem","marginRight","FaTrophy","AnimatePresence","animate","opacity","initial","exit","xp","title","description","level","progress","required","y","React"],"sourceRoot":""}