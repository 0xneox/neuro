{"version":3,"file":"static/js/581.8b631045.chunk.js","mappings":"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","sources":["components/Navbar.js","hooks/useApi.js","pages/Leaderboard.js"],"sourcesContent":["// components/Navbar.js\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport { FaHome, FaSyncAlt, FaChartBar, FaUser, FaUsers, FaCog, FaUserFriends } from 'react-icons/fa';\r\n\r\nconst NavbarContainer = styled.div`\r\n  position: fixed;\r\n  bottom: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  background: linear-gradient(to right, #071665, #0348B2, #0870DE);\r\n  display: flex;\r\n  justify-content: space-around;\r\n  padding: 10px 0;\r\n  z-index: 1000;\r\n`;\r\n\r\nconst NavbarIcon = styled.div`\r\n  color: ${props => (props.active ? '#ffffff' : 'rgba(255, 255, 255, 0.6)')};\r\n  font-size: 20px;\r\n  cursor: pointer;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  transition: all 0.3s ease;\r\n\r\n  &:hover {\r\n    color: #ffffff;\r\n    transform: translateY(-3px);\r\n  }\r\n`;\r\n\r\nconst NavbarLabel = styled.div`\r\n  font-size: 12px;\r\n  margin-top: 4px;\r\n`;\r\n\r\nconst Navbar = () => {\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n\r\n  const navItems = [\r\n    { path: '/home', icon: FaHome, label: 'Home' },\r\n    { path: '/quest', icon: FaSyncAlt, label: 'Quest' },\r\n    { path: '/leaderboard', icon: FaChartBar, label: 'Leaderboard' },\r\n    {path:   '/invite', icon: FaUserFriends, label: 'Invite'},\r\n    { path: '/profile', icon: FaUser, label: 'Profile' },\r\n\r\n  ];\r\n\r\n  return (\r\n    <NavbarContainer>\r\n      {navItems.map(item => (\r\n        <NavbarIcon \r\n          key={item.path}\r\n          active={location.pathname === item.path} \r\n          onClick={() => navigate(item.path)}\r\n        >\r\n          <item.icon />\r\n          <NavbarLabel>{item.label}</NavbarLabel>\r\n        </NavbarIcon>\r\n      ))}\r\n    </NavbarContainer>\r\n  );\r\n};\r\n\r\nexport default Navbar;","import { useState, useCallback } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport axios from 'axios';\r\n\r\nconst api = axios.create({\r\n  baseURL: process.env.REACT_APP_API_BASE_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\napi.interceptors.request.use((config) => {\r\n  const token = localStorage.getItem('token');\r\n  if (token) {\r\n    config.headers['Authorization'] = `Bearer ${token}`;\r\n  }\r\n  return config;\r\n}, (error) => {\r\n  return Promise.reject(error);\r\n});\r\n\r\nconst useApi = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const request = useCallback(async (method, url, data = null, config = {}) => {\r\n    setLoading(true);\r\n    setError(null);\r\n\r\n    try {\r\n      const response = await api({ method, url, data, ...config });\r\n      return response.data;\r\n    } catch (err) {\r\n      setError(err.response?.data?.message || 'An error occurred');\r\n      toast.error(err.response?.data?.message || 'An error occurred');\r\n      throw err;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  const get = useCallback((url, config) => request('get', url, null, config), [request]);\r\n  const post = useCallback((url, data, config) => request('post', url, data, config), [request]);\r\n  const put = useCallback((url, data, config) => request('put', url, data, config), [request]);\r\n  const del = useCallback((url, config) => request('delete', url, null, config), [request]);\r\n\r\n  const authenticateTelegram = useCallback(async (telegramData) => {\r\n    setLoading(true);\r\n    setError(null);\r\n\r\n    try {\r\n      const response = await api.post('/auth/telegram', telegramData);\r\n      return response.data;\r\n    } catch (err) {\r\n      setError(err.response?.data?.message || 'Authentication failed');\r\n      toast.error(err.response?.data?.message || 'Authentication failed');\r\n      throw err;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  return { get, post, put, delete: del, authenticateTelegram, loading, error };\r\n};\r\n\r\nexport default useApi;","import React, { useState, useEffect, useCallback } from 'react';\r\nimport styled from 'styled-components';\r\nimport { motion, AnimatePresence } from 'framer-motion';\r\nimport { FaUsers, FaTrophy, FaUserFriends, FaGlobe, FaQuestionCircle, FaCalendarCheck } from 'react-icons/fa';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Navbar from '../components/Navbar';\r\nimport trophyIcon from '../Images/trophy.png';\r\nimport backgroundImage from \"../Images/background_image.png\";\r\nimport logoLeft from \"../Images/logo.png\";\r\nimport logoRight from \"../Images/logo1.png\";\r\nimport defaultAvatar from \"../Images/sam.webp\";\r\nimport useApi from '../hooks/useApi'; // Assume we have this custom hook for API calls\r\n\r\nconst LeaderboardWrapper = styled(motion.div)`\r\n  position: relative;\r\n  min-height: 100vh;\r\n  width: 100vw;\r\n  color: #ffffff;\r\n  background-color: #000033;\r\n  background-image: url(${backgroundImage});\r\n  background-size: cover;\r\n  background-position: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst Header = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 10px 20px;\r\n  width: 100%;\r\n  box-sizing: border-box;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  z-index: 1000;\r\n`;\r\n\r\nconst Logo = styled.img`\r\n  height: 20px;\r\n  width: auto;\r\n`;\r\n\r\nconst RightLogo = styled(Logo)`\r\n  height: 30px; // Increased size for the right logo\r\n`;\r\n\r\nconst ContentWrapper = styled.div`\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  padding: 80px 20px 20px;\r\n  max-width: 800px;\r\n  margin: 0 auto;\r\n  width: 100%;\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  font-size: 28px;\r\n  text-align: center;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nconst Subtitle = styled.p`\r\n  font-size: 14px;\r\n  text-align: center;\r\n  margin-bottom: 20px;\r\n  opacity: 0.8;\r\n`;\r\n\r\nconst TrophyIcon = styled.img`\r\n  width: 60px;\r\n  height: 60px;\r\n  margin: 0 auto 20px;\r\n`;\r\n\r\nconst Timer = styled.div`\r\n  font-size: 18px;\r\n  text-align: center;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst FilterContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst FilterButton = styled.button`\r\n  background-color: ${props => props.active ? '#3d85c6' : 'transparent'};\r\n  color: white;\r\n  border: 1px solid #3d85c6;\r\n  padding: 8px 16px;\r\n  margin: 0 5px;\r\n  border-radius: 20px;\r\n  cursor: pointer;\r\n  transition: background-color 0.3s ease;\r\n\r\n  &:hover {\r\n    background-color: ${props => props.active ? '#3d85c6' : 'rgba(61, 133, 198, 0.2)'};\r\n  }\r\n`;\r\n\r\nconst LeaderboardTypeContainer = styled(FilterContainer)`\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nconst TopThree = styled.div`\r\n  display: flex;\r\n  justify-content: space-around;\r\n  margin-bottom: 20px;\r\n  width: 100%;\r\n`;\r\n\r\nconst TopUser = styled(motion.div)`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nconst UserAvatar = styled.img`\r\n  width: 50px;\r\n  height: 50px;\r\n  border-radius: 50%;\r\n  border: 2px solid ${props => props.borderColor};\r\n`;\r\n\r\nconst Username = styled.span`\r\n  font-size: 12px;\r\n  margin-top: 5px;\r\n`;\r\n\r\nconst LeaderboardTable = styled.table`\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n`;\r\n\r\nconst TableRow = styled(motion.tr)`\r\n  border-bottom: 1px solid rgba(255, 255, 255, 0.1);\r\n`;\r\n\r\nconst TableCell = styled.td`\r\n  padding: 8px 5px;\r\n  font-size: 14px;\r\n`;\r\n\r\nconst CTAContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  margin-top: 20px;\r\n`;\r\n\r\nconst CTAButton = styled.button`\r\n  background-color: #4caf50;\r\n  color: white;\r\n  border: none;\r\n  padding: 10px 20px;\r\n  margin: 10px 0;\r\n  border-radius: 20px;\r\n  cursor: pointer;\r\n  transition: background-color 0.3s ease;\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  &:hover {\r\n    background-color: #45a049;\r\n  }\r\n\r\n  svg {\r\n    margin-right: 8px;\r\n  }\r\n`;\r\n\r\nconst Leaderboard = () => {\r\n  const navigate = useNavigate();\r\n  const [timeLeft, setTimeLeft] = useState(24 * 60 * 60);\r\n  const [timeFilter, setTimeFilter] = useState('daily');\r\n  const [leaderboardType, setLeaderboardType] = useState('global');\r\n  const [leaderboardData, setLeaderboardData] = useState([]);\r\n  const [userPosition, setUserPosition] = useState(null);\r\n\r\n  const api = useApi();\r\n\r\n  useEffect(() => {\r\n    const timer = setInterval(() => {\r\n      setTimeLeft(prevTime => prevTime > 0 ? prevTime - 1 : 24 * 60 * 60);\r\n    }, 1000);\r\n    return () => clearInterval(timer);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const fetchLeaderboardData = async () => {\r\n      try {\r\n        const response = await api.get(`/api/leaderboard/${timeFilter}?type=${leaderboardType}`);\r\n        setLeaderboardData(response.data);\r\n      } catch (error) {\r\n        console.error('Error fetching leaderboard data:', error);\r\n      }\r\n    };\r\n\r\n    const fetchUserPosition = async () => {\r\n      try {\r\n        const response = await api.get(`/api/leaderboard/position/${timeFilter}`);\r\n        setUserPosition(response.data.position);\r\n      } catch (error) {\r\n        console.error('Error fetching user position:', error);\r\n      }\r\n    };\r\n\r\n    fetchLeaderboardData();\r\n    fetchUserPosition();\r\n  }, [api, timeFilter, leaderboardType]);\r\n\r\n  const formatTime = useCallback((time) => {\r\n    const hours = Math.floor(time / 3600);\r\n    const minutes = Math.floor((time % 3600) / 60);\r\n    const seconds = time % 60;\r\n    return `${hours.toString().padStart(2, '0')}:${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;\r\n  }, []);\r\n\r\n  return (\r\n    <LeaderboardWrapper\r\n      initial={{ opacity: 0 }}\r\n      animate={{ opacity: 1 }}\r\n      exit={{ opacity: 0 }}\r\n    >\r\n      <Header>\r\n        <Logo src={logoLeft} alt=\"Neurolov Logo\" />\r\n        <RightLogo src={logoRight} alt=\"Neurolov Logo\" />\r\n      </Header>\r\n      \r\n      <ContentWrapper>\r\n        <Title>Wall of Fame</Title>\r\n        <Subtitle>Play daily and win rewards!</Subtitle>\r\n        <TrophyIcon src={trophyIcon} alt=\"Trophy\" />\r\n        <Timer>Resets in: {formatTime(timeLeft)}</Timer>\r\n        \r\n        <LeaderboardTypeContainer>\r\n          <FilterButton \r\n            active={leaderboardType === 'global'}\r\n            onClick={() => setLeaderboardType('global')}\r\n          >\r\n            <FaGlobe /> Global\r\n          </FilterButton>\r\n          <FilterButton \r\n            active={leaderboardType === 'friends'}\r\n            onClick={() => setLeaderboardType('friends')}\r\n          >\r\n            <FaUserFriends /> Friends\r\n          </FilterButton>\r\n        </LeaderboardTypeContainer>\r\n\r\n        <FilterContainer>\r\n          <FilterButton active={timeFilter === 'daily'} onClick={() => setTimeFilter('daily')}>Daily</FilterButton>\r\n          <FilterButton active={timeFilter === 'weekly'} onClick={() => setTimeFilter('weekly')}>Weekly</FilterButton>\r\n          <FilterButton active={timeFilter === 'allTime'} onClick={() => setTimeFilter('allTime')}>All Time</FilterButton>\r\n        </FilterContainer>\r\n        \r\n        <TopThree>\r\n          {leaderboardData.slice(0, 3).map((user, index) => (\r\n            <TopUser key={user._id} initial={{ scale: 0 }} animate={{ scale: 1 }} transition={{ delay: index * 0.2 }}>\r\n              <UserAvatar src={user.avatar || defaultAvatar} alt={user.username} borderColor={['gold', 'silver', '#cd7f32'][index]} />\r\n              <Username>{user.username}</Username>\r\n              <div>{user.rewards} XP</div>\r\n            </TopUser>\r\n          ))}\r\n        </TopThree>\r\n        \r\n        <LeaderboardTable>\r\n          <AnimatePresence>\r\n            {leaderboardData.slice(3).map((user, index) => (\r\n              <TableRow\r\n                key={user._id}\r\n                initial={{ opacity: 0, y: 20 }}\r\n                animate={{ opacity: 1, y: 0 }}\r\n                exit={{ opacity: 0, y: -20 }}\r\n                transition={{ delay: index * 0.05 }}\r\n              >\r\n                <TableCell>{index + 4}</TableCell>\r\n                <TableCell>{user.username}</TableCell>\r\n                <TableCell>{user.rewards.toLocaleString()} XP</TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </AnimatePresence>\r\n        </LeaderboardTable>\r\n\r\n        {userPosition && (\r\n          <div>Your Position: {userPosition}</div>\r\n        )}\r\n\r\n        <CTAContainer>\r\n          <CTAButton onClick={() => navigate('/quest')}>\r\n            <FaQuestionCircle /> Complete a Quest\r\n          </CTAButton>\r\n          <CTAButton onClick={() => navigate('/achievements', { state: { highlight: '7dayStreak' } })}>\r\n            <FaCalendarCheck /> Maintain 7-Day Streak\r\n          </CTAButton>\r\n        </CTAContainer>\r\n      </ContentWrapper>\r\n      \r\n      <Navbar />\r\n    </LeaderboardWrapper>\r\n  );\r\n};\r\n\r\nexport default React.memo(Leaderboard);"],"names":["NavbarContainer","styled","div","NavbarIcon","props","active","NavbarLabel","Navbar","navigate","useNavigate","location","useLocation","navItems","path","icon","FaHome","label","FaSyncAlt","FaChartBar","FaUserFriends","FaUser","_jsx","children","map","item","_jsxs","pathname","onClick","api","axios","create","baseURL","process","REACT_APP_API_BASE_URL","headers","interceptors","request","use","config","token","localStorage","getItem","error","Promise","reject","useApi","loading","setLoading","useState","setError","useCallback","async","method","url","data","arguments","length","undefined","err","_err$response","_err$response$data","_err$response2","_err$response2$data","response","message","toast","get","post","put","delete","authenticateTelegram","telegramData","_err$response3","_err$response3$data","_err$response4","_err$response4$data","LeaderboardWrapper","motion","backgroundImage","Header","Logo","img","RightLogo","ContentWrapper","Title","h1","Subtitle","p","TrophyIcon","Timer","FilterContainer","FilterButton","button","LeaderboardTypeContainer","TopThree","TopUser","UserAvatar","borderColor","Username","span","LeaderboardTable","table","TableRow","tr","TableCell","td","CTAContainer","CTAButton","Leaderboard","timeLeft","setTimeLeft","timeFilter","setTimeFilter","leaderboardType","setLeaderboardType","leaderboardData","setLeaderboardData","userPosition","setUserPosition","useEffect","timer","setInterval","prevTime","clearInterval","console","fetchLeaderboardData","position","fetchUserPosition","formatTime","time","hours","Math","floor","minutes","seconds","toString","padStart","initial","opacity","animate","exit","src","logoLeft","alt","logoRight","trophyIcon","FaGlobe","slice","user","index","scale","transition","delay","avatar","defaultAvatar","username","rewards","_id","AnimatePresence","y","toLocaleString","FaQuestionCircle","state","highlight","FaCalendarCheck","React"],"sourceRoot":""}